{"version":3,"sources":["routes/christmasSpace/Participant/Participant.module.css","logo.svg","routes/Home/Home.tsx","routes/christmasSpace/ChristmasHome/ChristmasHome.tsx","routes/christmasSpace/Participant/Participant.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","main","wrapper","dataText","header","dataContainer","desc","descItem","releaseContainer","releaseIngress","releaseDate","__webpack_require__","p","Home","jane","useParams","react_default","a","createElement","className","src","logo","alt","href","target","rel","ChristmasHome","gameId","Participant","startDate","descArray","_useState","useState","_useState2","Object","slicedToArray","setLoading","_useState3","_useState4","setError","_useState5","_useState6","game","setGame","participantId","_useState7","_useState8","showRecipient","setShowRecipient","useEffect","fetch","concat","then","response","ok","statusText","json","data","error","console","log","message","autoOpen","Date","parse","split","styles","title","me","name","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","id","Typography","AccordionDetails","map","d","align","participants","length","isOpen","Fragment","toLocaleString","weekday","getDate","getMonth","getHours","getMinutes","givingTo","Button","variant","onClick","disabled","App","dist","path","element","Home_Home","ChristmasHome_ChristmasHome","Participant_Participant","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_router_dom_dist","src_App"],"mappings":"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","file":"static/js/main.026e964c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Participant_main__RTqnb\",\"wrapper\":\"Participant_wrapper__3ZQbp\",\"dataText\":\"Participant_dataText__29dWr\",\"header\":\"Participant_header__2OQCo\",\"dataContainer\":\"Participant_dataContainer__163l4\",\"desc\":\"Participant_desc__2cZn8\",\"descItem\":\"Participant_descItem__2ddog\",\"releaseContainer\":\"Participant_releaseContainer__fncGj\",\"releaseIngress\":\"Participant_releaseIngress__1DXpe\",\"releaseDate\":\"Participant_releaseDate__1yhvk\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\nimport logo from '../../logo.svg';\nimport {useParams} from \"react-router-dom\";\n\nfunction Home() {\n\n    let { jane } = useParams();\n    return (\n        <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Edit <code>src/App.tsx</code> and save to reload.\n      </p>\n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Learn React{jane}\n      </a>\n    </header>\n    )\n}\n\nexport default Home;","import React from \"react\";\nimport {useParams} from \"react-router-dom\";\n\nfunction ChristmasHome() {\n\n    let { gameId } = useParams();\n    return (\n        <div>\n            <h1>\n                This is home for game: {gameId}\n            </h1>\n        </div>\n    )\n}\n\nexport default ChristmasHome;","import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {GameResponse} from \"../../../api/types/games\";\n\nimport styles from \"./Participant.module.css\"\nimport {Accordion, AccordionSummary, AccordionDetails, Button, Typography} from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nfunction Participant() {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string>();\n    const [game, setGame] = useState<GameResponse>();\n    let { participantId } = useParams();\n    let { gameId } = useParams();\n\n    const [showRecipient, setShowRecipient] = useState(false);\n\n\n    useEffect(() => {\n        fetch(`https://christmas-space-s7sdcyjejq-lz.a.run.app/games/${gameId}/${participantId}`)\n            .then(\n                (response) => {\n                    setLoading(false)\n                    if (!response.ok) {\n                        setError(response.statusText)\n                    }\n\n                    response.json().then(data => setGame(data as GameResponse))\n                },\n                (error) => {\n                    setLoading(false)\n                    console.log(error.message)\n                    setError(error.message)\n                }\n            )\n    }, [])\n\n    let startDate: Date | undefined\n    if (game && game.autoOpen) {\n        startDate = new Date(Date.parse(game.autoOpen))\n    }\n\n    let descArray: string[] | undefined\n    if (game && game.desc) {\n        descArray = game.desc.split(\"\\n\")\n    }\n\n    console.log(game)\n\n    if (game) {\n        return (\n            <div className={styles.main}>\n                <h1 className={styles.header}>\n                    {game.title}\n                </h1>\n                <div className={styles.wrapper}>\n                    <div className={styles.dataContainer}>\n                        {game.me && (\n                            <p className={styles.dataText}>Givare:\n                                <span className={styles.dataText}> {game.me.name}</span>\n                            </p>\n                        )}\n                        <p className={styles.dataText}>Pris:\n                            <span className={styles.dataText}> 250 kr</span>\n                        </p>\n                    </div>\n                    {descArray &&\n                        (<Accordion\n                            className={styles.desc}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography>Beskrivning</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                {descArray.map(d => (\n                                    <Typography className={styles.descItem} align={\"left\"} >\n                                        {d}\n                                    </Typography>\n                                    ))}\n                            </AccordionDetails>\n                        </Accordion>)\n                    }\n                    {game.participants.length && (\n                        <Accordion\n                            className={styles.desc}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography>Andra deltagare</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                {game.participants.map(p => (\n                                    <Typography align={\"left\"}>\n                                        {p.name}\n                                    </Typography>\n                                ))}\n                            </AccordionDetails>\n                        </Accordion>\n                    )}\n                    {startDate && (\n                    <div className={styles.releaseContainer}>\n                        <p className={styles.releaseIngress}>{showRecipient ? \"Du ska  ge till\" : (game.isOpen ? \"Klicka för att se mottgare\" : \"Vem du ska ge till lottas\")}</p>\n\n\n                        {!game.isOpen && (\n                            <>\n                            <p className={styles.releaseDate}>\n                                {`${startDate.toLocaleString(\"sv-SE\",\n                                    {\n                                        weekday: \"long\",\n                                    })} ${startDate.getDate()}/${startDate.getMonth()+1}`}\n                            </p>\n                            <p className={styles.releaseDate}>\n                        {`kl ${startDate.getHours()}:${startDate.getMinutes() < 10 ? \"0\" : \"\"}${startDate.getMinutes()}`}\n                            </p>\n                            </>\n                        )}\n                        {game.isOpen && game.me && showRecipient && (\n                                <p className={styles.releaseDate}>\n                                    {game.me.givingTo}\n                                </p>\n                        )}\n                    </div>\n                    )}\n\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => setShowRecipient(!showRecipient)}\n                        disabled={!game.isOpen}\n                    >\n                        {showRecipient ? \"Dölj mottagare\" : \"Visa mottagare\"}\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={styles.main}>\n\n        </div>\n    )\n\n}\n\nexport default Participant;","import React from 'react';\nimport {Route, Routes} from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./routes/Home\";\nimport ChristmasHome from \"./routes/christmasSpace/ChristmasHome\";\nimport Participant from \"./routes/christmasSpace/Participant\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={ <Home/> } />\n          <Route path=\"christmas/game\">\n              <Route path=\":gameId\" element={ <ChristmasHome/> } />\n              <Route path=\":gameId/:participantId\" element={ <Participant/> } />\n          </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport styles from \"./routes/christmasSpace/Participant/Participant.module.css\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}